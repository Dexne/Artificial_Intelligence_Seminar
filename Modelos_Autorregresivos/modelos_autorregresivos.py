# -*- coding: utf-8 -*-
"""Modelos_Autorregresivos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hEdKaQ4Kta8bhfI_hwiDPfELF7CdHfnh
"""

# Modelos autorregresivos (AR)
# Importamos modulos y librer√≠as
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Cargamos los datos
data = pd.read_csv('daily-min-temperatures.csv')

data.head()

# Creamos variable x con la columna temp
x = np.asanyarray(data[['Temp']])
plt.plot(x)

# Graficamos desde el primer dia hasta el ultimo
# contra el inicio al penultimo dia
plt.scatter(x[1:], x[:-1])

# sacamos la correlacion
np.corrcoef(x[1:].transpose(), x[:-1].transpose())
#array([[1.        , 0.77487022], [0.77487022, 1.        ]])

# Grafica de autocorrelacion
pd.plotting.autocorrelation_plot(data.Temp)

# Creamos una matriz con la temperatura de dias anteriores para hacer la prediccion
data2 = pd.DataFrame(data.Temp)

p = 5
for i in range(1,p+1):
    data2 = pd.concat([data2, data.Temp.shift(-i)], axis=1)
data2 = data2[:-p]

data2.head()

# Creamos nuestras entradas y salida
x = np.asanyarray(data2.iloc[:,1:])
y = np.asanyarray(data2.iloc[:,0])

from sklearn.model_selection import train_test_split
#Partimos para crear el train y test
xtrain, xtest, ytrain, ytest = train_test_split(x,y)

# al ser un autorregresor lineal, usamos lineal
from sklearn.linear_model import LinearRegression

# Importamos la regresion lineal
model = LinearRegression()
#Entrenamos
model.fit(xtrain,ytrain)

#Mostramos metricas
print('Train: ', model.score(xtrain, ytrain))
print('Test: ', model.score(xtest, ytest))

# ---- RESULTADOS ------
#Train:  0.6326175834623979
#Test:  0.6305643403865413